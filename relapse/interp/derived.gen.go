// Code generated by goderive DO NOT EDIT.

package interp

import (
	ast "github.com/katydid/katydid/relapse/ast"
	"math"
)

// deriveHash returns the hash of the object.
func deriveHash(object *ast.Pattern) uint64 {
	if object == nil {
		return 0
	}
	h := uint64(17)
	h = 31*h + deriveHash_(object.Empty)
	h = 31*h + deriveHash_1(object.TreeNode)
	h = 31*h + deriveHash_2(object.LeafNode)
	h = 31*h + deriveHash_3(object.Concat)
	h = 31*h + deriveHash_4(object.Or)
	h = 31*h + deriveHash_5(object.And)
	h = 31*h + deriveHash_6(object.ZeroOrMore)
	h = 31*h + deriveHash_7(object.Reference)
	h = 31*h + deriveHash_8(object.Not)
	h = 31*h + deriveHash_9(object.ZAny)
	h = 31*h + deriveHash_10(object.Contains)
	h = 31*h + deriveHash_11(object.Optional)
	h = 31*h + deriveHash_12(object.Interleave)
	return h
}

// deriveHash_ returns the hash of the object.
func deriveHash_(object *ast.Empty) uint64 {
	if object == nil {
		return 0
	}
	h := uint64(17)
	h = 31*h + deriveHash_13(object.Empty)
	return h
}

// deriveHash_1 returns the hash of the object.
func deriveHash_1(object *ast.TreeNode) uint64 {
	if object == nil {
		return 0
	}
	h := uint64(17)
	h = 31*h + deriveHash_14(object.Name)
	h = 31*h + deriveHash_13(object.Colon)
	h = 31*h + deriveHash(object.Pattern)
	return h
}

// deriveHash_2 returns the hash of the object.
func deriveHash_2(object *ast.LeafNode) uint64 {
	if object == nil {
		return 0
	}
	h := uint64(17)
	h = 31*h + deriveHash_15(object.Expr)
	return h
}

// deriveHash_3 returns the hash of the object.
func deriveHash_3(object *ast.Concat) uint64 {
	if object == nil {
		return 0
	}
	h := uint64(17)
	h = 31*h + deriveHash_13(object.OpenBracket)
	h = 31*h + deriveHash(object.LeftPattern)
	h = 31*h + deriveHash_13(object.Comma)
	h = 31*h + deriveHash(object.RightPattern)
	h = 31*h + deriveHash_13(object.ExtraComma)
	h = 31*h + deriveHash_13(object.CloseBracket)
	return h
}

// deriveHash_4 returns the hash of the object.
func deriveHash_4(object *ast.Or) uint64 {
	if object == nil {
		return 0
	}
	h := uint64(17)
	h = 31*h + deriveHash_13(object.OpenParen)
	h = 31*h + deriveHash(object.LeftPattern)
	h = 31*h + deriveHash_13(object.Pipe)
	h = 31*h + deriveHash(object.RightPattern)
	h = 31*h + deriveHash_13(object.CloseParen)
	return h
}

// deriveHash_5 returns the hash of the object.
func deriveHash_5(object *ast.And) uint64 {
	if object == nil {
		return 0
	}
	h := uint64(17)
	h = 31*h + deriveHash_13(object.OpenParen)
	h = 31*h + deriveHash(object.LeftPattern)
	h = 31*h + deriveHash_13(object.Ampersand)
	h = 31*h + deriveHash(object.RightPattern)
	h = 31*h + deriveHash_13(object.CloseParen)
	return h
}

// deriveHash_6 returns the hash of the object.
func deriveHash_6(object *ast.ZeroOrMore) uint64 {
	if object == nil {
		return 0
	}
	h := uint64(17)
	h = 31*h + deriveHash_13(object.OpenParen)
	h = 31*h + deriveHash(object.Pattern)
	h = 31*h + deriveHash_13(object.CloseParen)
	h = 31*h + deriveHash_13(object.Star)
	return h
}

// deriveHash_7 returns the hash of the object.
func deriveHash_7(object *ast.Reference) uint64 {
	if object == nil {
		return 0
	}
	h := uint64(17)
	h = 31*h + deriveHash_13(object.At)
	h = 31*h + deriveHash_s(object.Name)
	return h
}

// deriveHash_8 returns the hash of the object.
func deriveHash_8(object *ast.Not) uint64 {
	if object == nil {
		return 0
	}
	h := uint64(17)
	h = 31*h + deriveHash_13(object.Exclamation)
	h = 31*h + deriveHash_13(object.OpenParen)
	h = 31*h + deriveHash(object.Pattern)
	h = 31*h + deriveHash_13(object.CloseParen)
	return h
}

// deriveHash_9 returns the hash of the object.
func deriveHash_9(object *ast.ZAny) uint64 {
	if object == nil {
		return 0
	}
	h := uint64(17)
	h = 31*h + deriveHash_13(object.Star)
	return h
}

// deriveHash_10 returns the hash of the object.
func deriveHash_10(object *ast.Contains) uint64 {
	if object == nil {
		return 0
	}
	h := uint64(17)
	h = 31*h + deriveHash_13(object.Dot)
	h = 31*h + deriveHash(object.Pattern)
	return h
}

// deriveHash_11 returns the hash of the object.
func deriveHash_11(object *ast.Optional) uint64 {
	if object == nil {
		return 0
	}
	h := uint64(17)
	h = 31*h + deriveHash_13(object.OpenParen)
	h = 31*h + deriveHash(object.Pattern)
	h = 31*h + deriveHash_13(object.CloseParen)
	h = 31*h + deriveHash_13(object.QuestionMark)
	return h
}

// deriveHash_12 returns the hash of the object.
func deriveHash_12(object *ast.Interleave) uint64 {
	if object == nil {
		return 0
	}
	h := uint64(17)
	h = 31*h + deriveHash_13(object.OpenCurly)
	h = 31*h + deriveHash(object.LeftPattern)
	h = 31*h + deriveHash_13(object.SemiColon)
	h = 31*h + deriveHash(object.RightPattern)
	h = 31*h + deriveHash_13(object.ExtraSemiColon)
	h = 31*h + deriveHash_13(object.CloseCurly)
	return h
}

// deriveHash_13 returns the hash of the object.
func deriveHash_13(object *ast.Keyword) uint64 {
	if object == nil {
		return 0
	}
	h := uint64(17)
	h = 31*h + deriveHash_16(object.Before)
	h = 31*h + deriveHash_s(object.Value)
	return h
}

// deriveHash_14 returns the hash of the object.
func deriveHash_14(object *ast.NameExpr) uint64 {
	if object == nil {
		return 0
	}
	h := uint64(17)
	h = 31*h + deriveHash_17(object.Name)
	h = 31*h + deriveHash_18(object.AnyName)
	h = 31*h + deriveHash_19(object.AnyNameExcept)
	h = 31*h + deriveHash_20(object.NameChoice)
	return h
}

// deriveHash_15 returns the hash of the object.
func deriveHash_15(object *ast.Expr) uint64 {
	if object == nil {
		return 0
	}
	h := uint64(17)
	h = 31*h + deriveHash_13(object.RightArrow)
	h = 31*h + deriveHash_13(object.Comma)
	h = 31*h + deriveHash_21(object.Terminal)
	h = 31*h + deriveHash_22(object.List)
	h = 31*h + deriveHash_23(object.Function)
	h = 31*h + deriveHash_24(object.BuiltIn)
	return h
}

// deriveHash_s returns the hash of the object.
func deriveHash_s(object string) uint64 {
	var h uint64
	for _, c := range object {
		h = 31*h + uint64(c)
	}
	return h
}

// deriveHash_16 returns the hash of the object.
func deriveHash_16(object *ast.Space) uint64 {
	if object == nil {
		return 0
	}
	h := uint64(17)
	h = 31*h + deriveHash_25(object.Space)
	return h
}

// deriveHash_17 returns the hash of the object.
func deriveHash_17(object *ast.Name) uint64 {
	if object == nil {
		return 0
	}
	h := uint64(17)
	h = 31*h + deriveHash_16(object.Before)
	h = 31*h + deriveHash_26(object.DoubleValue)
	h = 31*h + deriveHash_27(object.IntValue)
	h = 31*h + deriveHash_28(object.UintValue)
	h = 31*h + deriveHash_29(object.BoolValue)
	h = 31*h + deriveHash_30(object.StringValue)
	h = 31*h + deriveHash_31(object.BytesValue)
	return h
}

// deriveHash_18 returns the hash of the object.
func deriveHash_18(object *ast.AnyName) uint64 {
	if object == nil {
		return 0
	}
	h := uint64(17)
	h = 31*h + deriveHash_13(object.Underscore)
	return h
}

// deriveHash_19 returns the hash of the object.
func deriveHash_19(object *ast.AnyNameExcept) uint64 {
	if object == nil {
		return 0
	}
	h := uint64(17)
	h = 31*h + deriveHash_13(object.Exclamation)
	h = 31*h + deriveHash_13(object.OpenParen)
	h = 31*h + deriveHash_14(object.Except)
	h = 31*h + deriveHash_13(object.CloseParen)
	return h
}

// deriveHash_20 returns the hash of the object.
func deriveHash_20(object *ast.NameChoice) uint64 {
	if object == nil {
		return 0
	}
	h := uint64(17)
	h = 31*h + deriveHash_13(object.OpenParen)
	h = 31*h + deriveHash_14(object.Left)
	h = 31*h + deriveHash_13(object.Pipe)
	h = 31*h + deriveHash_14(object.Right)
	h = 31*h + deriveHash_13(object.CloseParen)
	return h
}

// deriveHash_21 returns the hash of the object.
func deriveHash_21(object *ast.Terminal) uint64 {
	if object == nil {
		return 0
	}
	h := uint64(17)
	h = 31*h + deriveHash_16(object.Before)
	h = 31*h + deriveHash_s(object.Literal)
	h = 31*h + deriveHash_26(object.DoubleValue)
	h = 31*h + deriveHash_27(object.IntValue)
	h = 31*h + deriveHash_28(object.UintValue)
	h = 31*h + deriveHash_29(object.BoolValue)
	h = 31*h + deriveHash_30(object.StringValue)
	h = 31*h + deriveHash_31(object.BytesValue)
	h = 31*h + deriveHash_32(object.Variable)
	return h
}

// deriveHash_22 returns the hash of the object.
func deriveHash_22(object *ast.List) uint64 {
	if object == nil {
		return 0
	}
	h := uint64(17)
	h = 31*h + deriveHash_16(object.Before)
	h = 31*h + uint64(object.Type)
	h = 31*h + deriveHash_13(object.OpenCurly)
	h = 31*h + deriveHash_33(object.Elems)
	h = 31*h + deriveHash_13(object.CloseCurly)
	return h
}

// deriveHash_23 returns the hash of the object.
func deriveHash_23(object *ast.Function) uint64 {
	if object == nil {
		return 0
	}
	h := uint64(17)
	h = 31*h + deriveHash_16(object.Before)
	h = 31*h + deriveHash_s(object.Name)
	h = 31*h + deriveHash_13(object.OpenParen)
	h = 31*h + deriveHash_33(object.Params)
	h = 31*h + deriveHash_13(object.CloseParen)
	return h
}

// deriveHash_24 returns the hash of the object.
func deriveHash_24(object *ast.BuiltIn) uint64 {
	if object == nil {
		return 0
	}
	h := uint64(17)
	h = 31*h + deriveHash_13(object.Symbol)
	h = 31*h + deriveHash_15(object.Expr)
	return h
}

// deriveHash_25 returns the hash of the object.
func deriveHash_25(object []string) uint64 {
	if object == nil {
		return 0
	}
	h := uint64(17)
	for i := 0; i < len(object); i++ {
		h = 31*h + deriveHash_s(object[i])
	}
	return h
}

// deriveHash_26 returns the hash of the object.
func deriveHash_26(object *float64) uint64 {
	if object == nil {
		return 0
	}
	return (31 * 17) + math.Float64bits(*object)
}

// deriveHash_27 returns the hash of the object.
func deriveHash_27(object *int64) uint64 {
	if object == nil {
		return 0
	}
	return (31 * 17) + uint64(*object)
}

// deriveHash_28 returns the hash of the object.
func deriveHash_28(object *uint64) uint64 {
	if object == nil {
		return 0
	}
	return (31 * 17) + *object
}

// deriveHash_29 returns the hash of the object.
func deriveHash_29(object *bool) uint64 {
	if object == nil {
		return 0
	}
	return (31 * 17) + deriveHash_b(*object)
}

// deriveHash_30 returns the hash of the object.
func deriveHash_30(object *string) uint64 {
	if object == nil {
		return 0
	}
	return (31 * 17) + deriveHash_s(*object)
}

// deriveHash_31 returns the hash of the object.
func deriveHash_31(object []byte) uint64 {
	if object == nil {
		return 0
	}
	h := uint64(17)
	for i := 0; i < len(object); i++ {
		h = 31*h + uint64(object[i])
	}
	return h
}

// deriveHash_32 returns the hash of the object.
func deriveHash_32(object *ast.Variable) uint64 {
	if object == nil {
		return 0
	}
	h := uint64(17)
	h = 31*h + uint64(object.Type)
	return h
}

// deriveHash_33 returns the hash of the object.
func deriveHash_33(object []*ast.Expr) uint64 {
	if object == nil {
		return 0
	}
	h := uint64(17)
	for i := 0; i < len(object); i++ {
		h = 31*h + deriveHash_15(object[i])
	}
	return h
}

// deriveHash_b returns the hash of the object.
func deriveHash_b(object bool) uint64 {
	if object {
		return 1
	}
	return 0
}
